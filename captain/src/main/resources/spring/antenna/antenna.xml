<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms.xsd
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd
       ">

  <context:component-scan base-package="com.ani.octopus.antenna"/>

  <context:property-placeholder location="classpath:/spring/antenna/antenna.properties" ignore-unresolvable="true"
                                order="201"/>

  <!-- jms factory-->
  <amq:connectionFactory id="antennaTargetConnectionFactory"
                         brokerURL="tcp://${octopus.jms.broker.url}:${octopus.jms.broker.port}"
                         clientID="${octopus.jms.clientId}"/>

  <!--<bean id="antennaPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">-->
    <!--<property name="connectionFactory" ref="antennaTargetConnectionFactory"/>-->
    <!--<property name="maxConnections" value="10"/>-->
  <!--</bean>-->

  <bean id="antennaConnectionFactory"
        class="org.springframework.jms.connection.CachingConnectionFactory">
    <property name="targetConnectionFactory" ref="antennaTargetConnectionFactory"/>
    <property name="sessionCacheSize" value="50"/>
    <!--<property name="exceptionListener" ref="jmsExceptionListener"/>-->
  </bean>

  <bean id="antennaMessageTopicDestination" class="org.apache.activemq.command.ActiveMQTopic">
    <constructor-arg value="${octopus.jms.queue}.message"/>
  </bean>

  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="antennaConnectionFactory"/>
    <property name="defaultDestination" ref="antennaMessageTopicDestination"/>
    <property name="pubSubDomain" value="true"/>
    <!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
    <property name="deliveryMode" value="2"/>
    <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
    <property name="sessionAcknowledgeMode" value="1"/>
    <!-- Needs to be true for the deliveryMode to work -->
    <property name="explicitQosEnabled" value="true"/>
  </bean>

  <!-- AniObjectController-->
  <bean id="aniObjectController" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
    <property name="connectionFactory" ref="antennaConnectionFactory"/>
    <property name="queueName" value="${octopus.jms.queue}.aniObjectController"/>
    <property name="serviceInterface" value="com.ani.octopus.object.controller.AniObjectController"/>
  </bean>

  <bean id="aniStubMetaService" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
    <property name="connectionFactory" ref="antennaConnectionFactory"/>
    <property name="queueName" value="${octopus.jms.queue}.aniStubMetaService"/>
    <property name="serviceInterface" value="com.ani.octopus.stub.core.service.AniStubMetaService"/>
  </bean>

  <bean id="accountServiceFacade" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
    <property name="connectionFactory"
              ref="antennaConnectionFactory"/>
    <property name="queueName" value="${octopus.jms.queue}.AccountServiceFacade"/>
    <property name="serviceInterface" value="com.ani.octopus.account.interfaces.AccountServiceFacade"/>
  </bean>

  <bean id="accountGroupServiceFacade" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
    <property name="connectionFactory"
              ref="antennaConnectionFactory"/>
    <property name="queueName" value="${octopus.jms.queue}.AccountGroupServiceFacade"/>
    <property name="serviceInterface" value="com.ani.octopus.account.interfaces.AccountGroupServiceFacade"/>
  </bean>

  <!-- ObjectMessageListener-->
  <!--<jms:listener-container connection-factory="antennaConnectionFactory" destination-type="durableTopic">-->
    <!--<jms:listener destination="${octopus.jms.queue}.message"-->
                  <!--ref="objectMessageListener"-->
                  <!--method="onNotifyMessage"/>-->
  <!--</jms:listener-container>-->

  <!-- rmi-->
  <!-- ObjectInvokeListener-->
  <!--<bean class="org.springframework.remoting.rmi.RmiServiceExporter">-->
    <!--<property name="serviceName" value="ObjectInvokeListener"/>-->
    <!--<property name="service" ref="objectInvokeListener"/>-->
    <!--<property name="serviceInterface" value="com.ani.octopus.antenna.infrastructure.service.ObjectInvokeListener"/>-->
    <!--<property name="replaceExistingBinding" value="true"/>-->
    <!--&lt;!&ndash;<property name="registryHost" value="${rmi.host}"/>&ndash;&gt;-->
    <!--<property name="registryPort" value="${octopus.rmi.invoke.port}"/>-->
  <!--</bean>-->
</beans>